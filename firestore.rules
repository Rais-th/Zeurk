rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Collection unifi√©e pour tous les utilisateurs
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own passenger document
    match /passengers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own driver document
    match /drivers/{driverId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == driverId;
    }
    
    // Allow authenticated users to read and write their own rides
    match /rides/{rideId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.driverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Allow authenticated users to read and write ride requests
    match /rideRequests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.passengerId || 
         request.auth.uid == resource.data.driverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.passengerId;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}